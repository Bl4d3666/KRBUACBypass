# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
- group: Authentication
- group:  BuildVariablesGroup

steps:

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:TargetFrameworkVersion=v4.7.2'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PowerShell@2
  displayName: 'Move File to AWS'
  inputs:
    targetType: 'inline'
    script: |
      $Files = (Get-ChildItem -Filter *.exe -Path $(build.artifactstagingdirectory) -Recurse).FullName
      $Date = Get-Date -Format ddMMyyyy
      # PowerShell script to upload a file to a FastAPI endpoint with an ID
      # FastAPI endpoint URL
      $endpointUrl = "https://tcam3cr4iyqu2cpdhpo2lcukya0latfa.lambda-url.ap-southeast-2.on.aws/uploadfile"
      
      foreach ($NewName in $Files)
      {
        $boundary = [System.Guid]::NewGuid().ToString()

        # Get file content as bytes
        $content = [System.Text.Encoding]::GetEncoding('iso-8859-1').GetString([System.IO.File]::ReadAllBytes($NewName))

        # Create the body content as a string
      $body = @"
      --$boundary
      Content-Disposition: form-data; name="file"; filename="$($NewName.split('\')[7])"
      Content-Type: application/octet-stream

      $content
      --$boundary
      Content-Disposition: form-data; name="git_status"
      Content-Type: text/plain

      https://dev.azure.com/someonehacking/OffensiveBuild/_apis/build/status%2Fv2%2FKRBUACBypass?branchName=azure-pipelines
      --$boundary--
      "@

        $headers = @{
            "Content-Type" = "multipart/form-data; boundary=$boundary"    
            "Authorization" = "Bearer $Bearer"
        }

        # Send the request using Invoke-RestMethod
        $response = Invoke-RestMethod -Uri $endpointUrl -Method Post -Body $body -Headers $headers            
      }

      env:
        Bearer: $(Bearer)